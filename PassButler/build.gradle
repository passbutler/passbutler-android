apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: "de.mannodermaus.android-junit5"

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    compileOptions {
        // Compile with pinned Java 7 (avoid changing `misc.xml` when cold-start Android Studio)
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    dataBinding {
        enabled = true
    }

    defaultConfig {
        applicationId "de.sicherheitskritisch.passbutler"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        // Added custom build field to get compile time
        buildConfigField "java.util.Date", "BUILD_TIME", "new java.util.Date(" + System.currentTimeMillis() + "L)"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/room_schemas".toString()]
            }
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            useProguard false
            debuggable true
            minifyEnabled false

            manifestPlaceholders = [usesCleartextTraffic:true]
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            manifestPlaceholders = [usesCleartextTraffic:false]
        }
    }
}

dependencies {
    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"

    // Kotlin Coroutines for Android
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$rootProject.ext.kotlinCoroutinesVersion"

    // Android support libraries
    implementation "com.android.support:appcompat-v7:$rootProject.ext.androidSupportLibraryVersion"
    implementation "com.android.support:support-v4:$rootProject.ext.androidSupportLibraryVersion"
    implementation "com.android.support:design:$rootProject.ext.androidSupportLibraryVersion"

    // Android constraint layout library
    implementation "com.android.support.constraint:constraint-layout:$rootProject.ext.androidConstraintLayoutLibraryVersion"

    // Android Lifecycle and ViewModel components
    implementation "android.arch.lifecycle:extensions:$rootProject.ext.androidLifecycleVersion"
    kapt "android.arch.lifecycle:compiler:$rootProject.ext.androidLifecycleVersion"

    // Android Room components
    implementation "android.arch.persistence.room:runtime:$rootProject.ext.androidRoomVersion"
    kapt "android.arch.persistence.room:compiler:$rootProject.ext.androidRoomVersion"

    // RetroFit 2 + Kotlin Coroutine Adapter
    implementation "com.squareup.retrofit2:retrofit:$rootProject.ext.retrofitVersion"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$rootProject.ext.retrofitKotlinCoroutineAdapterVersion"

    // LeakCanary
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$rootProject.ext.leakCanaryVersion"
    debugImplementation "com.squareup.leakcanary:leakcanary-support-fragment:$rootProject.ext.leakCanaryVersion"

    // JUnit 5
    testImplementation "org.junit.jupiter:junit-jupiter-api:$rootProject.ext.jUnitVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$rootProject.ext.jUnitVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$rootProject.ext.jUnitVersion"

    // Mockk.io
    testImplementation "io.mockk:mockk:$rootProject.ext.mockkioVersion"

    // JSON implementations for unit testing
    testImplementation "org.json:json:$rootProject.ext.jsonVersion"
}
